{"version":3,"sources":["PlayerList/PlayerList.js","PlayerList/index.js","App.js","serviceWorker.js","index.js"],"names":["PlayerList","props","className","id","data","name","value","batting_rank","bowling_rank","all_round_rank","App","useState","playersList","length","totalPlayer","selectedPlayer","setselectedPlayer","totalSelectedValue","setTotalSelectedValue","totalSelectedStrength","setTotalSelectedStrength","totalBudget","handleDrag","ev","dataTransfer","setData","target","handleDrop","myTeam","getData","closest","left","document","querySelector","parentNode","insertBefore","getElementById","appendChild","querySelectorAll","classList","add","getSelectedPlayers","currentPlayer","selectedarray","i","firstElementChild","getAttribute","push","replace","getPlayerStrength","thisPlayerStats","initialState","reduce","prev","player","find","playerData","Number","calculateStrength","currencyFormat","num","toFixed","map","index","key","draggable","onDragStart","onDrop","onDragOver","e","preventDefault","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4b9b4183.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.css';\r\n\r\nfunction PlayerList(props) {\r\n    return (\r\n        <div className=\"player-wrapper\">\r\n            <div className=\"wrapper-container\" id={'player-id-'+props.data.id}>\r\n                <div className=\"padder-five\">\r\n                    <i className=\"fa fa-user-circle fa-5x\"></i>\r\n                </div>\r\n                <div className=\"padder-ten\">\r\n                    <div> {props.data.name}</div>\r\n                    <div> {props.data.value}</div>\r\n                </div>\r\n                <div className=\"padder-five\">\r\n                    <div>\r\n                        <span className=\"container-label\">Batting Rank: { props.data.batting_rank }</span>\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"container-label\">Bowling Rank: { props.data.bowling_rank }</span>\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"container-label\">All Round Rank: { props.data.all_round_rank }</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default PlayerList;\r\n","import PlayerList from './PlayerList';\r\nexport default PlayerList;","import React, { useState } from 'react';\nimport PlayerStat from './PlayerList';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction App() {\n\n  const playerData = [{\n    \"id\": 1,\n    \"name\": \"Player 1\",\n    \"value\": 1000000,\n    \"batting_rank\": 2,\n    \"bowling_rank\": 3,\n    \"all_round_rank\": 2\n  },\n  {\n    \"id\": 2,\n    \"name\": \"Player 2\",\n    \"value\": 800000,\n    \"batting_rank\": 7,\n    \"bowling_rank\": 8,\n    \"all_round_rank\": 9\n  }, {\n    \"id\": 3,\n    \"name\": \"Player 3\",\n    \"value\": 1200000,\n    \"batting_rank\": 5,\n    \"bowling_rank\": 3,\n    \"all_round_rank\": 4\n  }, {\n    \"id\": 4,\n    \"name\": \"Player 4\",\n    \"value\": 1800000,\n    \"batting_rank\": 2,\n    \"bowling_rank\": 3,\n    \"all_round_rank\": 2\n  }, {\n    \"id\": 5,\n    \"name\": \"Player 5\",\n    \"value\": 300000,\n    \"batting_rank\": 9,\n    \"bowling_rank\": 9,\n    \"all_round_rank\": 9\n  }, {\n    \"id\": 6,\n    \"name\": \"Player 6\",\n    \"value\": 600000,\n    \"batting_rank\": 7,\n    \"bowling_rank\": 9,\n    \"all_round_rank\": 8\n  }, {\n    \"id\": 7,\n    \"name\": \"Player 7\",\n    \"value\": 700000,\n    \"batting_rank\": 7,\n    \"bowling_rank\": 8,\n    \"all_round_rank\": 8\n  }, {\n    \"id\": 8,\n    \"name\": \"Player 8\",\n    \"value\": 1300000,\n    \"batting_rank\": 6,\n    \"bowling_rank\": 7,\n    \"all_round_rank\": 7\n  }, {\n    \"id\": 9,\n    \"name\": \"Player 9\",\n    \"value\": 100000,\n    \"batting_rank\": 12,\n    \"bowling_rank\": 13,\n    \"all_round_rank\": 12\n  }, {\n    \"id\": 10,\n    \"name\": \"Player 10\",\n    \"value\": 800000,\n    \"batting_rank\": 4,\n    \"bowling_rank\": 13,\n    \"all_round_rank\": 9\n  }, {\n    \"id\": 11,\n    \"name\": \"Player 11\",\n    \"value\": 2200000,\n    \"batting_rank\": 1,\n    \"bowling_rank\": 1,\n    \"all_round_rank\": 1\n  }, {\n    \"id\": 12,\n    \"name\": \"Player 12\",\n    \"value\": 700000,\n    \"batting_rank\": 5,\n    \"bowling_rank\": 8,\n    \"all_round_rank\": 7\n  }, {\n    \"id\": 13,\n    \"name\": \"Player 13\",\n    \"value\": 500000,\n    \"batting_rank\": 8,\n    \"bowling_rank\": 8,\n    \"all_round_rank\": 9\n  }, {\n    \"id\": 14,\n    \"name\": \"Player 14\",\n    \"value\": 150000,\n    \"batting_rank\": 9,\n    \"bowling_rank\": 9,\n    \"all_round_rank\": 10\n  }, {\n    \"id\": 15,\n    \"name\": \"Player 15\",\n    \"value\": 170000,\n    \"batting_rank\": 22,\n    \"bowling_rank\": 23,\n    \"all_round_rank\": 12\n  },\n  {\n    \"id\": 16,\n    \"name\": \"Player 16\",\n    \"value\": 170000,\n    \"batting_rank\": 12,\n    \"bowling_rank\": 32,\n    \"all_round_rank\": 9\n  }, {\n    \"id\": 17,\n    \"name\": \"Player 17\",\n    \"value\": 4656577,\n    \"batting_rank\": 13,\n    \"bowling_rank\": 11,\n    \"all_round_rank\": 23\n  },\n  {\n    \"id\": 18,\n    \"name\": \"Player 18\",\n    \"value\": 2332223,\n    \"batting_rank\": 1,\n    \"bowling_rank\": 1,\n    \"all_round_rank\": 2\n  },\n  {\n    \"id\": 19,\n    \"name\": \"Player 19\",\n    \"value\": 200000,\n    \"batting_rank\": 11,\n    \"bowling_rank\": 21,\n    \"all_round_rank\": 32\n  },\n  {\n    \"id\": 20,\n    \"name\": \"Player 20\",\n    \"value\": 4000000,\n    \"batting_rank\": 1,\n    \"bowling_rank\": 1,\n    \"all_round_rank\": 2\n  }];\n  const [playersList] = useState(playerData),\n    [totalPlayer] = useState(playersList.length),\n    [selectedPlayer, setselectedPlayer] = useState(0),\n    [totalSelectedValue, setTotalSelectedValue] = useState(0),\n    [totalSelectedStrength, setTotalSelectedStrength] = useState(0.00),\n    [totalBudget] = useState(100000000)\n\n\n  /**\n   * @name handleDrag \n   * @description drag a selected player\n   * @param {*} ev \n   */\n  const handleDrag = (ev) => {\n    ev.dataTransfer.setData(\"selectedPlayer\", ev.target.id);\n  }\n\n\n  /**\n   * @name handleDrop\n   * @description drop selected player in the list\n   * @param {*} ev \n   */\n\n  const handleDrop = ev => {\n    let target = ev.target,\n      data = ev.dataTransfer.getData(\"selectedPlayer\"),\n      closest = target.closest('.items-container'),\n      myTeam,\n      left = document.querySelector('.left-container');\n    if (!data) return;\n    (null != closest)\n      ? (closest.parentNode.insertBefore(document.getElementById(data), closest))\n      : (target.appendChild(document.getElementById(data)));\n\n    //Get selected players and capture the length \n    myTeam = document.querySelectorAll('.selected-section .player-wrapper');\n    setselectedPlayer(myTeam.length);\n    if (selectedPlayer >= 14) {\n      left.classList.add('stop-propagation');\n    }\n    getSelectedPlayers();\n  }\n\n  /**\n  * @name getSelectedPlayers\n  * @method\n  * @description Get selected player\n  */\n\n  const getSelectedPlayers = () => {\n    let myTeam = document.querySelectorAll('.selected-section .player-wrapper'),\n      selectedarray = [],\n      currentPlayer;\n    for (let i = 0; i < myTeam.length; i++) {\n      currentPlayer = myTeam[i].firstElementChild.getAttribute('id')\n      selectedarray.push(currentPlayer.replace('player-id-', ''));\n    }\n    setTotalSelectedStrength(getPlayerStrength(selectedarray));\n  }\n\n  /**\n   * @name getPlayerStrength\n   * @method\n   * @description Get player strength\n   * @param {*} selectedarray Selected player Details\n   */\n\n  const getPlayerStrength = (selectedarray) => {\n    let initialState = 0,\n      thisPlayerStats,\n      total = selectedarray.reduce((prev, player) => {\n        thisPlayerStats = playersList.find((playerData) => {\n          return playerData['id'] === Number(player);\n        });\n        prev += calculateStrength(thisPlayerStats);\n        setTotalSelectedValue(initialState += thisPlayerStats['value']);\n        return prev;\n      }, 0);\n\n    return total / (selectedarray.length * 3);\n  }\n\n  /**\n   * @name calculateStrength\n   * @method\n   * @description Calculate strength of the player\n   * @param {*} thisPlayerStats Player Details\n   */\n\n  const calculateStrength = (thisPlayerStats) => {\n    return (100 - thisPlayerStats['batting_rank']) + (100 - thisPlayerStats['bowling_rank']) + (100 - thisPlayerStats['all_round_rank']);\n  }\n\n  /**\n   * @name currencyFormat\n   * @method\n   * @description Displays the currency in number format\n   * @param {*} num number to convert\n   */\n  const currencyFormat = (num) => {\n    return '$' + num.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"header-section\">\n        <h2>IPL Online Team Selection</h2>\n      </header>\n\n      <div className=\"row header-row\" >\n        <div className=\"col-md-3 player-count\">\n          <div className=\"\">Available Players : {totalPlayer - selectedPlayer}</div>\n        </div>\n        <div className=\"col-md-3 player-count\">\n          <div className=\"\">Selected: {selectedPlayer} / 15</div>\n        </div>\n      </div>\n      <div className=\"row\" >\n        <div className=\"col-md-3 container left-container\">\n          {\n            playersList.map((data, index) =>\n              <div className=\"items-container\" key={'playerList' + index} id={\"item-id-\" + index} draggable=\"true\" onDragStart={handleDrag} onDrop={handleDrop} onDragOver={e => e.preventDefault()}>\n                <PlayerStat data={data} />\n              </div>\n            )\n          }\n        </div>\n\n        <div className=\"col-md-3 container selected-section\" draggable=\"true\" onDragStart={handleDrag} onDrop={handleDrop} onDragOver={e => e.preventDefault()}>\n          {(selectedPlayer === 0) ? <h5 >Drag your team here!!!</h5> : null}\n        </div>\n\n        <div className=\"col-md-3 container\">\n          <p className=\"container-label\">Total Budget: {currencyFormat(totalBudget)}</p>\n          <p className=\"container-label\">Used : {currencyFormat(totalSelectedValue)} </p>\n          <p className=\"container-label\">Available : {currencyFormat(totalBudget - totalSelectedValue)}</p>\n          <p className=\"container-label\">Team Strength : {totalSelectedStrength.toFixed(2)}</p>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}